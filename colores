#!/usr/bin/bash

version="1.0.1"
progname=$(basename "$0")

declare -A layers=(
    ["-fore"]="38"
    ["-back"]="48"
)

declare -A styles=(
    ["bold"]="1"
    ["italic"]="3"
    ["underline"]="4"
    ["flashing"]="5"
    ["inverted"]="7"
)

declare -A markers=(
    ["success"]="\e[92m+"
    ["error"]="\e[91m-"
    ["warning"]="\e[93m!"
    ["info"]="\e[32m*"
    ["question"]="\e[96m?"
    ["on"]="\e[92mON"
    ["off"]="\e[91mOFF"
    ["debug"]="\e[31mDEBUG"
)

# Get a list of available elements in a string.
available_styles="${!styles[*]}"
available_markers="${!markers[*]}"

# Replace ' ' with ', ' in the list of available elements.
available_styles="${available_styles// /, }"
available_markers="${available_markers// /, }"

usage="\
$progname v$version - Script for customizing text appearance.

Usage: $progname [options] [arguments]

Options:
  -fore <COLOR>
    Set foreground color using available color palettes.

  -back <COLOR>
    Set background color using available color palettes.

  -style <STYLES>
    Set style(s) to text using available styles.

  -mark <MARKER>
    Set status marker to string using available markers.

  -reset
    Reset all formatting to default appearance.

  -help
    Output this help message.

Available color palettes:
  RGB format: <R> <G> <B>
  HEX format: <HEX>
  ANSI format: <ANSI>

Available styles:
  $available_styles

Available markers:
  $available_markers\
"

if [[ $# -eq 0 ]]; then
    result="$usage"
fi

while [[ $# -gt 0 ]]; do
    case "$1" in
        "-fore" | "-back")
            if [[ "$2" =~ ^[0-9]{1,3}$ && "$2" -ge 0 && "$2" -le 255 &&
                  "$3" =~ ^[0-9]{1,3}$ && "$3" -ge 0 && "$3" -le 255 &&
                  "$4" =~ ^[0-9]{1,3}$ && "$4" -ge 0 && "$4" -le 255 ]]; then # RGB
                r="$2"
                g="$3"
                b="$4"

                color="2;$r;$g;$b"
                shifts=4
            elif [[ "$2" =~ ^[0-9A-Fa-f]{6}$ ]]; then # HEX
                hex="$2"
                r="$(( 16#${hex:0:2} ))"
                g="$(( 16#${hex:2:2} ))"
                b="$(( 16#${hex:4:2} ))"

                color="2;$r;$g;$b"
                shifts=2
            elif [[ "$2" =~ ^[0-9]{1,3} && "$2" -ge 0 && "$2" -le 255 ]]; then # ANSI
                ansi="$2"

                color="5;$ansi"
                shifts=2
            fi

            result+="\e[${layers[$1]};${color}m"
            shift $shifts
            ;;
        "-style")
            shift

            while [[ $# -gt 0 && -n "${styles[$1]}" ]]; do
                result+="\e[${styles[$1]}m"
                shift
            done
            ;;
        "-mark")
            result="\e[0m [${markers[$2]}\e[0m] $result"
            shift 2
            ;;
        "-reset")
            result="\e[0m"
            break
            ;;
        "-help")
            result="$usage"
            break
            ;;
        *)
            shift
            ;;
    esac
done

echo -E "$result"
